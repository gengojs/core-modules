{"version":3,"sources":["modules/optify/index.js"],"names":[],"mappings":"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","file":"modules/optify/index.js","sourcesContent":["/**\n * This module reads or sets the initial options\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _fs = require('fs');\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _jsYaml = require('js-yaml');\n\nvar _jsYaml2 = _interopRequireDefault(_jsYaml);\n\nvar _gengojsDebug = require('gengojs-debug');\n\nvar _gengojsDebug2 = _interopRequireDefault(_gengojsDebug);\n\n/*\n    Definition: Options must be either a string or a plain object.\n\n    1. Options must be an object that specifies the type \n       such as 'parser' or options must be a string that specifies \n       the path to the options file.\n       \n\n    Side note: Every plugin created must offer default options and must \n    be responsible with letting the developers know about the options\n    for your plugin (through GitHub, etc).\n*/\n\nvar Optify = function Optify(options) {\n  _classCallCheck(this, Optify);\n\n  (0, _gengojsDebug2['default'])('core', 'debug', 'process: (constructor: ' + Optify.name);\n  this.options = {};\n  var settings;\n  try {\n    if (_lodash2['default'].isPlainObject(options) && !_lodash2['default'].isEmpty(options)) this.options = options;else if (_lodash2['default'].isString(options)) {\n      // Normalize the string and if it ends in yml replace it\n      options = _path2['default'].normalize(options.replace('yml', 'yaml'));\n      // Load the json or javascript file\n      if (/\\.json/.test(options) || /\\.js/.test(options)) {\n        settings = require(options);\n        this.options = settings;\n      } else if (/\\.yaml/.test(options)) {\n        // Load yaml\n        settings = _jsYaml2['default'].safeLoad(_fs2['default'].readFileSync(options, 'utf8'));\n        this.options = settings;\n      } else {\n        throw new Error('Oops! Did you forgt to add the extension? \\n' + 'The supported extensions are .json, .js, and .yaml.');\n      }\n    } else this.options = settings || {};\n  } catch (error) {\n    (0, _gengojsDebug2['default'])('core', 'error', error.stack || error.toString());\n  }\n};\n\nexports['default'] = function (options) {\n  'use strict';\n  return new Optify(options);\n};\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=../../source maps/modules/optify/index.js.map"],"sourceRoot":"/source/"}