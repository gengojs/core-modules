{"version":3,"sources":["modules/inputify/index.js"],"names":[],"mappings":"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","file":"modules/inputify/index.js","sourcesContent":["/**\n * This module extracts the phrase and arguments.\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _gengojsDebug = require('gengojs-debug');\n\nvar _gengojsDebug2 = _interopRequireDefault(_gengojsDebug);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\n/**\n * Extractify\n */\n\nvar Extractify = (function () {\n  function Extractify(array) {\n    _classCallCheck(this, Extractify);\n\n    (0, _gengojsDebug2['default'])('core', 'debug', 'process: (constructor: ' + Extractify.name + ')');\n    var values = {},\n        args = [],\n        value,\n        length = array.length;\n    (0, _gengojsDebug2['default'])('core', 'debug', 'array: ' + array, 'length: ' + length);\n    // If the arguments is greater than 2 (because of offset)\n    if (length > 1) {\n      // Just append them to the array\n      array.forEach(function (item) {\n        return args.push(item);\n      });\n    }\n    // If they are exactly 2 argument\n    else if (length === 1) {\n        // Get the first value\n        value = array[0];\n        // Set arguments [...]\n        if (_lodash2['default'].isArray(value)) args = value;else if (_lodash2['default'].isPlainObject(value)) args = [];else args.push(value);\n        // Set values {...}\n        values = _lodash2['default'].isPlainObject(value) ? value : {};\n      }\n\n    this.values = values;\n    this.args = args;\n  }\n\n  /**\n   * Inputify\n   */\n\n  _createClass(Extractify, [{\n    key: 'hasValues',\n    value: function hasValues() {\n      return !_lodash2['default'].isEmpty(this.values);\n    }\n  }, {\n    key: 'hasArgs',\n    value: function hasArgs() {\n      return !_lodash2['default'].isEmpty(this.args);\n    }\n  }]);\n\n  return Extractify;\n})();\n\nvar Inputify = (function () {\n  function Inputify(phrase, args) {\n    _classCallCheck(this, Inputify);\n\n    (0, _gengojsDebug2['default'])('core', 'debug', 'process: (constructor: ' + Inputify.name + ')');\n    this._extract = new Extractify(args);\n    this._phrase = phrase;\n    this._args = args;\n  }\n\n  /**\n   * phrase\n   * @return {string} - The phrase to internationalize.\n   */\n\n  _createClass(Inputify, [{\n    key: 'phrase',\n    value: function phrase() {\n      return this._phrase;\n    }\n\n    /**\n     * arguments\n     * @return {Array} - The original arguments before extraction.\n     */\n  }, {\n    key: 'arguments',\n    value: function _arguments() {\n      return this._args;\n    }\n\n    /**\n     * other\n     * @return {object} - The other arguments after extraction in\n     * the form of an API.\n     * @example\n     * new Inputify(phrase, args).other().arguments();\n     * new Inputify(phrase, args).other().values();\n     * new Inputify(phrase, args).other().hasArgs();\n     * new Inputfiy(phrase, args).other().hasValues();\n     */\n  }, {\n    key: 'other',\n    value: function other() {\n      var _this = this;\n\n      return {\n        arguments: function _arguments() {\n          return _this._extract.other.args;\n        },\n        values: function values() {\n          return _this._extract.other.values;\n        },\n        hasArgs: function hasArgs() {\n          return _this._extract.hasArgs();\n        },\n        hasValues: function hasValues() {\n          return _this._extract.hasValues();\n        }\n      };\n    }\n  }]);\n\n  return Inputify;\n})();\n\nexports['default'] = function (phrase, args) {\n  'use strict';\n  return new Inputify(phrase, args);\n};\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=../../source maps/modules/inputify/index.js.map"],"sourceRoot":"/source/"}