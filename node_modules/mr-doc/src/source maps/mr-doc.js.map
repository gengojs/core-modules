{"version":3,"sources":["mr-doc.js"],"names":[],"mappings":"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","file":"mr-doc.js","sourcesContent":["'use strict';\nimport File from 'fs';\nimport Path from 'path';\nimport _ from 'lodash';\nimport Compiler from './compiler';\nimport Parser from './parser';\nimport Markdown from 'markdown-it';\nimport mkdirp from 'mkdirp';\nimport Theme from './theme';\n/**  \n * The main class that creates beautiful documentations.  \n * @class Doc  * @extend Compiler  \n */\nclass Doc extends Compiler {\n  // Initialize the compiler   \n  // and pass the parser.   \n  constructor(options) {\n      super(new Parser(options));\n      // Set the locals stack       \n      this.locals = [];\n    }\n    /** \n     * Generates the documentations.      \n     */\n  generate() {\n      // Compute all symboles       \n      var allSymbols = this.files.reduce(function(m, a) {\n        m = m.concat(a.symbols || []);\n        return m;\n      }, []);\n      // Set package\n      var pkg = this.options.package;\n      // Set readme\n      var readme = pkg && pkg.readme,\n        readMeFile = Path.resolve(process.cwd(), this.options.readme ||\n          (pkg && pkg.readmeFileName) || 'README.md');\n      if (!readme && File.existsSync(readMeFile)) {\n        readme = File.readFileSync(readMeFile).toString();\n      } else {\n        console.warn('Mr. Doc [warn]: No README.md file found at ' + readMeFile);\n      }\n      if (!readme) {\n        console.warn('Mr. Doc [warn]: Empty README.md ' + readMeFile);\n        readme = '';\n      }\n      var md = new Markdown();\n      md = md.render.bind(md);\n      // Get readme data       \n      this.files.unshift({\n        name: 'Main',\n        targetName: 'index.html',\n        readme: md(readme),\n        dox: [],\n        symbols: []\n      });\n      // Set title       \n      var title = this.options.name ? this.options.name : pkg ? pkg.name : 'No title';\n      // Set description       \n      var description = pkg && pkg.description ? pkg.description : '';\n      // Set URLs       \n      var url = {\n        github: pkg && pkg.homepage ?\n          pkg.homepage.indexOf('github') > -1 ?\n          pkg.homepage : false : false,\n        npm: pkg && pkg.name ? 'https://npmjs.com/package/' + pkg.name : false,\n        homepage: pkg && pkg.homepage ? pkg.homepage.indexOf('github') === -1 ? pkg.homepage : false : false\n      };\n      // Make sure the folder structure in target mirrors source       \n      var folders = [];\n      this.files.forEach(file => {\n        var folder = file.targetName\n          .substr(0, file.targetName.lastIndexOf(Path.sep));\n        if ((folder !== '') && (folders.indexOf(folder) === -1)) {\n          folders.push(folder);\n          mkdirp.sync(this.options.output + '/' + folder);\n        }\n      });\n      // Set each files relName in relation        \n      // to where this file is in the directory tree       \n      this.files.forEach(file => {\n        file.targets = this.getTargets(file);\n      });\n      this.files.forEach((file) => {\n        // Set locals         \n        this.locals.push(_.assign({}, file, {\n          project: {\n            title, description, url\n          },\n          allSymbols: allSymbols,\n          files: this.files,\n          current: {\n            name: file.name\n          },\n          file: {\n            targets: file.targets\n          }\n        }));\n      });\n      // Install theme       \n      (new Theme(this.options)).install().then((result) => {\n        var {\n          theme\n        } = result;\n        if (theme) {\n          console.info('Mr. Doc [info]: Installed theme: ' + theme);\n        }\n        _.forEach(this.files, (file, index) => {\n          // Set template           \n          this.setTemplate(result.template);\n          // Compile the template           \n          let compiled = this.compile(this.locals[index]);\n          // Write files           \n          mkdirp(this.options.output + '/', error => {\n            if (error) return;\n            else File.writeFileSync(Path.join(this.options.output, file.targetName), compiled);\n          });\n        });\n      }, console.error);\n    }\n    /**       \n     * Return the targets for the specified file      \n     * @private      \n     * @param  {Object} file The file to generate      \n     * @return {Object}      The iterator      \n     */\n  getTargets(file) {\n    return _.map(this.files, (f) => {\n      // Count how deep the current file is in relation to base       \n      var count = file.name.split('/');\n      count = count === null ? 0 : count.length - 1;\n      // relName is equal to targetName at the base dir       \n      f.relative = {\n        name: f.targetName,\n        path: ''\n      };\n      // For each directory in depth of current file        \n      // add a ../ to the relative filename of this link       \n      while (count > 0) {\n        f.relative.name = '../' + f.relative.name;\n        f.relative.path += '../';\n        count--;\n      }\n      // Set the target for each folder        \n      // to support nested directories       \n      // and allow asset files to access the dir       \n      return {\n        name: f.targetName,\n        path: f.relative.path + f.targetName,\n        file: {\n          name: f.name\n        },\n        relative: f.relative\n      };\n    });\n  }\n}\nexport default function(options) {\n  return new Doc(options);\n}"],"sourceRoot":"/source/"}