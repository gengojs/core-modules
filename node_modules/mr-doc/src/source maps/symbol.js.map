{"version":3,"sources":["symbol.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;;sBACC,QAAQ;;;;QACf,6BAA6B;;;;;;;IAK9B,MAAM;AACC,WADP,MAAM,GACI;0BADV,MAAM;GACM;;;;;;;;;eADZ,MAAM;;WAQM,mBAAC,OAAO,EAAE,IAAI,EAAE;AAC5B,aAAO,oBAAE,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,UAAS,MAAM,EAAE;AAC5C,YAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE;AACnC,iBAAO,IAAI,CAAC;SACb;AACD,eAAO;AACL,oBAAU,EAAE,IAAI;AAChB,cAAI,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI;AACrB,cAAI,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI;SACtB,CAAC;OACH,CAAC,CAAC,IAAI,EAAE,CAAC;KACX;;;;;;;;;;WAOO,aAAC,GAAG,EAAE;AACZ,aAAO,UAAS,GAAG,EAAE;AACnB,eAAO,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC;OACzB,CAAC;KACH;;;;;;;;WAKW,iBAAC,IAAI,EAAE;;;;;;;AAOjB,UAAI,SAAS,GAAG,EAAE,CAAC;AACnB,UAAI,CAAC,OAAO,CAAC,UAAS,GAAG,EAAE,CAAC,EAAE;AAC5B,YAAI,CAAC,GAAG,CAAC,IAAI,EAAE;AACb,cAAI,CAAC,KAAK,CAAC,EAAE;AACX,mBAAO;WACR;;AAED,cAAI,OAAO,GAAG,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AAC9C,cAAI,OAAO,CAAC,WAAW,EAAE;AACvB,mBAAO,CAAC,WAAW,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC;WACzC,MAAM;AACL,mBAAO,CAAC,MAAM,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC;WACpC;AACD,iBAAO;SACR;AACD,iBAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;OACrB,CAAC,CAAC;AACH,aAAO,SAAS,CAAC;KAClB;;;;;;;;;;WAOO,aAAC,MAAM,EAAE;AACjB,YAAM,CAAC,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAC1C,UAAI,IAAI,GAAG,EAAE,CAAC;AACd,OACE,MAAM,EAAE,aAAa,EAAE,SAAS,EAAE,MAAM,EAAE,cAAc,EACxD,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,EACtD,UAAU,EAAE,QAAQ,EAAE,SAAS,CAChC,CAAC,OAAO,CAAC,UAAA,GAAG,EAAI;;AACf,YAAI,GAAG,CAAC,KAAK,CAAC,oBAAoB,CAAC,EACjC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,UAAA,CAAC,EAAI;AACrC,iBAAO,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SAC5D,CAAC,CAAC,KACA,IAAI,GAAG,CAAC,KAAK,CAAC,gCAAgC,CAAC,EAAE;AACpD,cAAI,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,UAAA,CAAC,EAAI;AACvC,mBAAO,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;WAC5F,CAAC,CAAC;SACJ,MAAM,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;OAC5E,CAAC,CAAC;UAED,KAAK,GAGH,IAAI,CAHN,KAAK;UAAE,YAAY,GAGjB,IAAI,CAHC,YAAY;UAAE,QAAQ,GAG3B,IAAI,CAHe,QAAQ;UAC7B,KAAK,GAEH,IAAI,CAFN,KAAK;UAAE,aAAa,GAElB,IAAI,CAFC,aAAa;UAAE,SAAS,GAE7B,IAAI,CAFgB,SAAS;UAC/B,OAAO,GACL,IAAI,CADN,OAAO;UAAE,QAAQ,GACf,IAAI,CADG,QAAQ;UAAE,SAAS,GAC1B,IAAI,CADa,SAAS;;AAE9B,UAAI,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;AAChF,cAAM,CAAC,SAAS,GAAG,IAAI,CAAC;OACzB;AACD,UAAI,CAAC,MAAM,CAAC,GAAG,EAAE;AACf,cAAM,CAAC,GAAG,GAAG,EAAE,CAAC;OACjB;AACD,UAAI,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE;AACnB,cAAM,CAAC,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC;OAChC;AACD,UAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;AACtB,cAAM,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;OAC1C;AACD,UAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;AACtB,cAAM,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AAC5B,cAAM,CAAC,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AACpC,cAAM,CAAC,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;OACjC;AACD,UAAI,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;AAC9B,cAAM,CAAC,KAAK,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AACrC,cAAM,CAAC,UAAU,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AAC5C,cAAM,CAAC,QAAQ,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;OACzC;AACD,UAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;AAC1B,cAAM,CAAC,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AACjC,cAAM,CAAC,UAAU,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AACxC,cAAM,CAAC,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;OACrC;AACD,UAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;AACxB,cAAM,CAAC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,UAAA,CAAC,EAAI;AAChC,iBAAO,CAAC,CAAC,MAAM,CAAC;SACjB,CAAC,CAAC;OACJ;AACD,UAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;AACzB,cAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,UAAA,CAAC,EAAI;AAClC,iBAAO,CAAC,CAAC,MAAM,CAAC;SACjB,CAAC,CAAC;OACJ;AACD,UAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;AACzB,cAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,UAAA,CAAC,EAAI;AAClC,iBAAO,CAAC,CAAC,MAAM,CAAC;SACjB,CAAC,CAAC;OACJ;;;AAGD,YAAM,CAAC,WAAW,CAAC,KAAK,GAAG,EAAE,CAAC;AAC9B,UAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;AAC7B,cAAM,CAAC,WAAW,CAAC,KAAK,GAAG,KAAK,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC;OACpE;AACD,UAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;AAC1B,cAAM,CAAC,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;OACvC;AACD,aAAO,MAAM,CAAC;KACf;;;SA9IG,MAAM;;;qBAgJG,MAAM","file":"symbol.js","sourcesContent":["'use strict';\nimport _ from 'lodash';\nimport 'source-map-support/register';\n/**\n * The class that manges symbols.  \n * @class Symbol  \n */\nclass Symbol {\n  constructor() {}\n    /**      \n     * Returns the structure of a parsed file      \n     * @param  {Array} symbols  array of symbols      \n     * @param  {String} file    filename      \n     * @return {Array}      \n     */\n  static structure(symbols, file) {\n      return _.compact(symbols.map(function(method) {\n        if (!method.ctx || !method.ctx.name) {\n          return null;\n        }\n        return {\n          targetFile: file,\n          name: method.ctx.name,\n          type: method.ctx.type\n        };\n      })) || [];\n    }\n    /**      \n     * Checks if a tag has a specific type      \n     * @param  {string}  val value to check against      \n     * @return {function}  A function that evaluates the truth      \n     * when True if `tag` type is `val`      \n     */\n  static has(val) {\n      return function(tag) {\n        return tag.type === val;\n      };\n    }\n    /**      \n     * Compacts multi-line expression      \n     * @return {Array}      \n     */\n  static compact(tags) {\n      // [{\"type\":\"description\",     \n      // \"string\":\"Note: if `addClass` is defined at the step level.\"},    \n      //  {\"type\":\"\",    \n      //  \"string\": \"The two defined `addClass`      \n      //  will be taken into account in the popover\"},     \n      //  {\"type\":\"type\",\"types\":[\"String\"]}]     \n      var compacted = [];\n      tags.forEach(function(tag, i) {\n        if (!tag.type) {\n          if (i === 0) {\n            return;\n          }\n          // Append to previous         \n          var prevTag = compacted[compacted.length - 1];\n          if (prevTag.description) {\n            prevTag.description += ' ' + tag.string;\n          } else {\n            prevTag.string += ' ' + tag.string;\n          }\n          return;\n        }\n        compacted.push(tag);\n      });\n      return compacted;\n    }\n    /**    \n     * Maps symbols    \n     * @private    \n     * @param {Object} symbol    \n     * @return {Object}    \n     */\n  static map(symbol) {\n    symbol.tags = Symbol.compact(symbol.tags);\n    var tags = {};\n    [\n      'type', 'description', 'example', 'file', 'fileoverview',\n      'overview', 'param', 'require', 'jsfiddle', 'jsFiddle',\n      'JSFiddle', 'return', 'returns'\n    ].forEach(tag => { // Handle special cases       \n      if (tag.match(/(return|returns)\\b/))\n        tags.returns = symbol.tags.filter(s => {\n          return Symbol.has('return')(s) || Symbol.has('returns')(s);\n        });\n      else if (tag.match(/(jsfiddle|jsFiddle|JSFiddle)\\b/)) {\n        tags.jsfiddles = symbol.tags.filter(s => {\n          return Symbol.has('jsfiddle')(s) || Symbol.has('jsFiddle')(s) || Symbol.has('JSFiddle')(s);\n        });\n      } else tags[tag.toLowerCase() + 's'] = symbol.tags.filter(Symbol.has(tag));\n    });\n    var {\n      types, descriptions, examples,\n      files, fileoverviews, overviews,\n      returns, requires, jsfiddles\n    } = tags;\n    if (symbol.tags.length > 0 && symbol.tags.filter(Symbol.has('param')).length > 0) {\n      symbol.hasParams = true;\n    }\n    if (!symbol.ctx) {\n      symbol.ctx = {};\n    }\n    if (symbol.ctx.type) {\n      symbol.gtype = symbol.ctx.type;\n    }\n    if (types.length === 1) {\n      symbol.type = types[0].types.join(' | ');\n    }\n    if (files.length === 1) {\n      symbol.file = files[0].type;\n      symbol.fileString = files[0].string;\n      symbol.fileHtml = files[0].html;\n    }\n    if (fileoverviews.length === 1) {\n      symbol.files = fileoverviews[0].type;\n      symbol.fileString = fileoverviews[0].string;\n      symbol.fileHtml = fileoverviews[0].html;\n    }\n    if (overviews.length === 1) {\n      symbol.files = overviews[0].type;\n      symbol.fileString = overviews[0].string;\n      symbol.fileHtml = overviews[0].html;\n    }\n    if (returns.length !== 0) {\n      symbol.returns = returns.map(r => {\n        return r.string;\n      });\n    }\n    if (examples.length !== 0) {\n      symbol.examples = examples.map(e => {\n        return e.string;\n      });\n    }\n    if (requires.length !== 0) {\n      symbol.requires = requires.map(r => {\n        return r.string;\n      });\n    }\n\n    // No idea what this is for but it's there anyways.     \n    symbol.description.extra = '';\n    if (descriptions.length === 1) {\n      symbol.description.extra = '<p>' + descriptions[0].string + '</p>';\n    }\n    if (jsfiddles.length === 1) {\n      symbol.jsfiddle = jsfiddles[0].string;\n    }\n    return symbol;\n  }\n}\nexport default Symbol;"],"sourceRoot":"/source/"}