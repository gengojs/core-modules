#!/usr/bin/env node
/* global process */
'use strict';

var _               = require('lodash'),
    colors          = require('colors/safe'),
    doc             = require('../src/mr-doc'),
    option          = require('../src/option'),
    pkg             = require('../package.json'),
    updateNotifier  = require('update-notifier'),
    version         = require('../package').version,
    program         = require('commander');

// Checks for available update and returns an instance
var notifier = updateNotifier({
  pkg: pkg
});

// Notify using the built-in convenience method
notifier.notify();

// Show the update if it exists
if (notifier.update) console.log(notifier.update);

/**
 * Options & Defaults
 */
var defaults = option().getDefaults();

/**
 * Setup program
 */
program
  .version(version)
  .option('-e, --extension <extension>', 'The output files extension. Default: ' + defaults.extension)
  .option('-i, --ignore <directories>', 'The comma seperated list of directories to ignore. Default: ' + defaults.blacklist.toString())
  .option('-j, --template <template>', 'The Jade template file to use.')
  .option('-k, --kit [kit]', 'Marks the template as a starter-kit with a \'yes\' or \'no\' (optional).')
  .option('-n, --name <name>', 'The name of your project.')
  .option('-o, --output <output>', 'The directory for the generated docs. Default: <CWD>/docs')
  .option('-r, --readme <file>', 'The markdown file to use on the main page of the documentations. Checks the current directory for a package.json or README.md by default')
  .option('-s, --source <source>', 'The directory to your source.')
  .option('-t, --theme <theme>', 'The name of the theme to select. e.g. mr-doc-theme-cayman or cayman.');

function showHelp() {
  var greet = colors.cyan.italic;
  var explain = colors.green.bold;
  var comments = colors.gray.italic;
  console.log(greet('\tMr. Doc at your service!\n'));
  console.log(explain('\tHere is what you can do:\n'));
  console.log(comments('\t  # parse a whole folder'));
  console.log('\t  $ mr-doc --source ./lib --output ./docs\n');
  console.log(comments('\t  # parse a whole folder and use a specific template'));
  console.log('\t  $ mr-doc --template ./view/myowntpl.jade --source lib --output docs\n');
  console.log(comments('\t  # parse a whole folder and use a theme.'));
  console.log('\t  $ npm install --save mr-doc-theme-cayman')
  console.log('\t  $ mr-doc --source ./lib --output ./docs --theme cayman\n');
}

// examples
program.on('--help', showHelp);

// parse argv
program.parse(process.argv);

var options = option(program).getOptions();

if (!_.isEmpty(options.source))
  doc(options).generate();
