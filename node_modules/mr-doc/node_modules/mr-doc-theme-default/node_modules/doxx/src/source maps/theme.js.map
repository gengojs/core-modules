{"version":3,"sources":["theme.js"],"names":[],"mappings":"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","file":"theme.js","sourcesContent":["'use strict';\nimport bower from 'bower';\nimport when from 'when';\nimport Path from 'path';\nimport mkdirp from 'mkdirp';\nimport _ from 'lodash';\nimport File from 'fs-extra';\nimport del from 'del';\nimport elegantSpinner from 'elegant-spinner';\nimport logUpdate from 'log-update';\nimport Dir from './dir';\nimport 'source-map-support/register';\n\nlet frame = elegantSpinner();\n\n\n/**\n * The class that installs themes.\n * @class  Theme\n */\nclass Theme {\n  constructor(options) {\n    // Set hidden path\n    let hiddenPath = Path.join(Dir.getHomeDir(), '.doxx');\n\n    // Set template options\n    this.options = {\n      theme: {\n        name: options.theme,\n        path: hiddenPath\n      },\n      template: {\n        path: options.template.path\n      },\n      target: {\n        path: options.target\n      }\n    };\n  }\n\n  /** \n   * Installs the theme and its assets statically\n   * @param {Object} options The options\n   * @jsfiddle https://jsfiddle.net/iwatakeshi/k5xsvoez/embedded/\n   * @return {Function} The promise\n   */\n  static staticInstall(options) {\n      let final = when.defer();\n      /*\n        Required options:\n        \n        theme.name    (the name of the theme)\n        theme.path    (the path to store the theme)\n        target.path   (the path to store the compiled content)\n        template.path (the template path) *for test purposes only*\n       */\n\n      // Create cache paths and helpers\n      var cache = {\n        theme: {\n          path: options.theme.path\n        },\n        bower: {\n          path: Path.join(Path.join(\n              options.theme.path,\n              'bower_components/'),\n            options.theme.name + '/')\n        }\n      };\n\n      _.extend(cache, {\n        exists: () => {\n          return Dir.exists(cache.theme.path) &&\n            Dir.exists(cache.bower.path);\n        }\n      });\n\n      _.extend(cache.theme, {\n        exists: () => {\n          return Dir.exists(cache.theme.path);\n        }\n      });\n\n      _.extend(cache.bower, {\n        exists: () => {\n          return Dir.exists(cache.bower.path);\n        }\n      });\n\n      /** \n       * The commands to install the theme\n       * @type {object}\n       */\n      let commands = {\n        showProgress: (command) => {\n          var count = 0;\n          while (count < 200) {\n            logUpdate('Doxx [info]: ' + frame() + ' ' + command);\n            count++;\n          }\n        },\n        /**\n         * Create necessary paths to \n         * process the commands\n         * @return {Function}       The promise\n         */\n        preProcess: () => {\n          let d = when.defer();\n\n          let theme = options.theme.name;\n          // Create short-hands for paths\n\n          // Sources\n          var src = {\n            theme: {\n              path: options.theme.path\n            }\n          };\n\n          // Destinations\n          var dest = {\n            theme: {\n              path: options.target.path\n            }\n          };\n\n          // Assets dir\n          let assets = {\n            path: Path.join(Path.join(\n                src.theme.path, 'bower_components/'),\n              theme + '/assets/')\n          };\n\n          // Template dir\n          let template = {\n            path: Path.join(Path.join(\n                src.theme.path, 'bower_components/'),\n              theme + '/template/')\n          };\n\n          // The css dir within assets dir\n          _.extend(src, {\n            css: {\n              path: Path.join(assets.path, 'css/')\n            }\n          });\n          _.extend(dest, {\n            css: {\n              path: Path.join(dest.theme.path, 'css/')\n            }\n          });\n\n          // The js dir within assets dir\n          _.extend(src, {\n            js: {\n              path: Path.join(assets.path, 'js/')\n            }\n          });\n          _.extend(dest, {\n            js: {\n              path: Path.join(dest.theme.path, 'js/')\n            }\n          });\n\n          // The bower template dir within assets dir\n          _.extend(src, {\n            template\n          });\n          _.extend(dest, {\n            template: {\n              path: Path.join(dest.theme.path, 'template/')\n            }\n          });\n\n          d.resolve({\n            theme, src, dest\n          });\n          return d.promise;\n        },\n        /**\n         * Creates a temp dir for bower\n         * to install the bower components\n         * @param  {object} result The result\n         * @return {Function}        The promise\n         */\n        createDoxxDir: (result) => {\n          let d = when.defer();\n\n          // Check if the source directory exists\n          // Note: This is used for caching\n          if (Dir.exists(cache.theme.exists())) {\n            d.resolve(result);\n          } else {\n            mkdirp(cache.theme.path, (error) => {\n              console.log(error);\n              if (error) d.reject(error);\n              else {\n                d.resolve(result);\n              }\n            });\n          }\n          return d.promise;\n        },\n        /** \n         * Installs the theme through bower\n         * @param  {object} result The result\n         * @return {Function}       The promise\n         */\n        installTheme: (result) => {\n          var d = when.defer();\n          var {\n            theme\n          } = result;\n          // Check if the cached bower dir exists\n          if (Dir.exists(cache.bower.path)) {\n            d.resolve(result);\n          } else {\n            bower.commands\n              .install([theme], {\n                save: false\n              }, {\n                cwd: cache.theme.path\n              }).on('end', () => {\n                d.resolve(result);\n              }).on('error', d.reject);\n          }\n\n          return d.promise;\n        },\n        /**\n         * Copies the css dir from the assets dir\n         * to the target dir\n         * @param  {object} result The result\n         * @return {Function}        The promise\n         */\n        copyAssetCSS: (result) => {\n          let d = when.defer();\n\n          var {\n            src, dest\n          } = result;\n\n          File.copy(src.css.path, dest.css.path, {\n            clobber: true\n          }, error => {\n            if (error) d.reject(error);\n            else {\n              d.resolve(result);\n            }\n          });\n          return d.promise;\n        },\n        /**\n         * Copies the js dir from the assets dir\n         * to the target dir\n         * @param  {object} result The result\n         * @return {Function}        The promise\n         */\n        copyAssetJS: (result) => {\n          let d = when.defer();\n\n          var {\n            src, dest\n          } = result;\n          File.copy(src.js.path, dest.js.path, {\n            clobber: true\n          }, error => {\n            if (error) d.reject(error);\n            else {\n              d.resolve(result);\n            }\n          });\n          return d.promise;\n        },\n        /**\n         * Copies the template dir from the assets dir\n         * to the target dir\n         * @param  {object} result The result\n         * @return {Function}        The promise\n         */\n        copyTemplate: (result) => {\n          let d = when.defer();\n\n          var {\n            src, dest\n          } = result;\n\n          File.copy(src.template.path, dest.template.path, {\n            clobber: true\n          }, error => {\n            if (error) d.reject(error);\n            else {\n              d.resolve(result);\n            }\n          });\n          return d.promise;\n        },\n        /** \n         * Reads the template and strigifies it.\n         * @param  {object} result The result\n         * @return {Function}      The promise\n         */\n        stringifyTemplate: (result) => {\n          let d = when.defer();\n\n          var {\n            dest, src, theme\n          } = result;\n          let file = dest.template.path + 'index.jade';\n\n          File.readFile(file, (error, data) => {\n            if (error) d.reject(error);\n            else d.resolve({\n              dest, src, theme,\n              template: data.toString(),\n                isCached: cache.exists()\n            });\n          });\n          return d.promise;\n        },\n        /**\n         * Removes the template dir from\n         * the target dir\n         * @param  {object} result The result\n         * @return {Function}        The promise\n         */\n        deleteTemplateDir: (result) => {\n          let d = when.defer();\n\n          var {\n            dest\n          } = result;\n          del([dest.template.path]).then(() => {\n            d.resolve(result);\n          });\n          return d.promise;\n        }\n      };\n\n      // Check if the template is enabled (legacy)\n      if (options.template && options.template.path) {\n        final.resolve({\n          template: File.readFileSync(\n            Path.resolve(__dirname,\n              options.template.path)).toString()\n        });\n      } else {\n\n        ((notify) => {\n\n          // Preprocess the commands\n          return commands.preProcess()\n            .tap(() => {\n              notify('Preparing to install theme' +\n                (cache.exists() ? ' from cache.' : ''));\n            })\n            // Create a temp dir\n            .then(commands.createDoxxDir)\n            .tap(() => {\n              if (!cache.theme.exists())\n                notify('Creating home directory');\n            })\n            // Install the theme using bower\n            .then(commands.installTheme)\n            .tap(() => {\n              notify('Installing theme');\n            })\n            // Copy css dir files\n            .then(commands.copyAssetCSS)\n            .tap(() => {\n              notify('Copying css directory to target');\n            })\n            // Copy the js dir & files\n            .then(commands.copyAssetJS)\n            .tap(() => {\n              notify('Copying js directory to target');\n            })\n            // Copy the template dir & file\n            .then(commands.copyTemplate)\n            .tap(() => {\n              notify('Copying template directory to target');\n            })\n            // Convert the template to a string\n            .then(commands.stringifyTemplate)\n            .tap(() => {\n              notify('Rendering the template from target');\n            })\n            // Delete the template dir\n            .then(commands.deleteTemplateDir)\n            .tap(() => {\n              notify('Removing template directory from target');\n            })\n            .then(final.resolve);\n        })(commands.showProgress);\n      }\n      return final.promise;\n    }\n    /** \n     * Installs the theme and its assets\n     * @return {Function} The promise\n     */\n  install() {\n    return Theme.staticInstall(this.options);\n  }\n}\n\nexport default Theme;"],"sourceRoot":"/source/"}